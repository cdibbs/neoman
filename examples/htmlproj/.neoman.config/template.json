{
    "#": [
        "This is a demo template configuration file. It follows the style of",
        "github.com/dotnet/templating and is inspired by the simplicity of the same.",
        "God bless those creatures of unusual templating simplicity. :-)",
        "P.S. Everything in a # block is ignored as a comment."
    ],
    "name": "HTML template project",
    "description": "A demo template project for testing the Neoman templating engine.",
    "author": "Chris Dibbern",
    "tags": {
        "keywords": [ "html", "templating", "demo" ], 
        "language": "HTML", "#": "The dominant language in this solution."
    },

    "identity": "htmlproj", "#": "A unique ID for the project template. Used when creating a project from a template.",
    "shortName": "hp", "#": "You can create the project using this short name instead of the one above.",

    "#": "Provides a way of interacting with the user.",
    "input": {
        "use": "prompt",
        "define": {
            "title": "What will be the title of your website?",
            "subtitle": "What subtitle?"
        }
    },

    "#": [
        "Transforms occur in the order they are defined. They apply to all files unless constrained by a",
        "configuration type, glob, or ."],
    "transform": [
        "# Strings like this are comments, in this section.",
        { "subject": "text", "with": "content: {{subtitle}}", "files": ["**/*.html"] },
        { "subject": "$.name", "with": "{{title}}", "using": "json", "params": { "action": "set", "type": "string" } },
        { "subject": "$.tags[2]", "with": "super", "using": "json", "params": { "action": "set", "type": "string" } },
        { "subject": "$.tags[3]", "with": "314", "using": "json", "params": { "action": "set", "type": "number" } },
        { "subject": "$.tags[3]", "with": "653", "using": "json", "params": { "action": "append", "type": "number" } },
        { "subject": "html>body>h1:first-child", "with": "My new title: {{title}}", "using": "html", "params": { "type": "text" } }
    ],

    "#": [
        "File transforms occur in the order they are defined. Multiple transforms might apply to the same file.",
        "Subject is always a regular expression. With can reference groupings from subject.",
        "Input and output paths are always relative to the destination."
    ],
    "pathTransform": [
        "/index.(\\d{4})-(\\d{2})-(\\d{2}).html/index$1$2$3.html/"
    ],

    "#": "We're leaving out unnecessary sections, in this example, such as files and ignore.",
    "files": [ "**/*.html", "package.json" ],

    "#": "Optional section to define configurations per file type.",
    "configurations": {
        "#": "Configuration keys should be short but descriptive. ",
        "html": {
            "files": ["**/*.html"],
            "plugin": "xml",
            "#": "Will try to find the plugin in ./plugins, first, then node_modules? Let's see."
        },
        "json": {
            "files": ["**/*.json"],
            "plugin": "json"
        }
    }
}